import sys
from collections import defaultdict


    # Чтение первой строки (N, K)
first_line = sys.stdin.readline()
N, K = map(int, first_line.strip().split())
    
    # Чтение второй строки (жанры)
second_line = sys.stdin.readline()
genres = list(map(int, second_line.strip().split()))
    
# Создаем словарь для подсчета общего количества игр каждого жанра
total_count = defaultdict(int)

# Заполняем словарь total_count: для каждого жанра считаем, сколько всего игр
for g in genres:
    total_count[g] += 1

# Создаем словарь для подсчета игр в первой папке (для текущего разбиения)
count1 = defaultdict(int)

# Список для хранения результатов оценки для каждого разбиения
results = []

# Перебираем все возможные точки разбиения (от 1 до N-1)
for m in range(1, N):
    # Берем жанр m-й игры (индексы с 0, поэтому m-1)
    g = genres[m-1]
    
    # Увеличиваем счетчик этого жанра в первой папке
    count1[g] += 1
    
    # Переменные для сумм квадратов вероятностей для обеих папок
    sum_p1_sq = 0.0  # Для первой папки
    sum_p2_sq = 0.0  # Для второй папки
    
    # Считаем сумму квадратов вероятностей для первой папки
    for g in count1:
        # Вероятность встретить жанр g в первой папке
        p1 = count1[g] / m
        # Добавляем квадрат вероятности к сумме
        sum_p1_sq += p1 * p1
    
    # Считаем сумму квадратов вероятностей для второй папки
    for g in total_count:
        # Количество игр жанра g во второй папке
        cnt2 = total_count[g] - count1.get(g, 0)
        # Если такие игры есть во второй папке
        if cnt2 > 0:
            # Вероятность встретить жанр g во второй папке
            p2 = cnt2 / (N - m)
            # Добавляем квадрат вероятности к сумме
            sum_p2_sq += p2 * p2
    
    # Вычисляем первое слагаемое оценки (для первой папки)
    term1 = (m / N) * (1 - sum_p1_sq)
    
    # Вычисляем второе слагаемое оценки (для второй папки)
    term2 = ((N - m) / N) * (1 - sum_p2_sq)
    
    # Суммируем оба слагаемых и добавляем результат в список
    results.append(term1 + term2)

    for res in results:
        print(res)

